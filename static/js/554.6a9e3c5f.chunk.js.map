{"version":3,"file":"static/js/554.6a9e3c5f.chunk.js","mappings":"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","sources":["components/TrendingMovieList/TrendingMovieList.syled.js","components/TrendingMovieList/TrendingMovieList.jsx","pages/Home.styled.js","pages/Home.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin-left: 10px;\n`;\n\nexport const MovieListItem = styled.li``;\n\nexport const MovieListItemLink = styled(Link)`\n  text-decoration: none;\n  display: block;\n  width: 300px;\n  height: 25px;\n  margin-top: 5px;\n  background-color: #cceeff;\n  padding: 5px;\n  color: black;\n  :hover,\n  :focus {\n    background-color: #1ab2ff;\n    color: white;\n    text-shadow: 1px blue;\n  }\n`;\n","import { MovieList, MovieListItem, MovieListItemLink } from './TrendingMovieList.syled';\n\n\nexport const TrendingMovieList = ({ movies, link, state }) => {\n    return (\n        <MovieList>\n            {movies.map(movie => {\n                const {id, title} = movie;\n                return (\n                    link ? \n                        <MovieListItem key={id}>\n                            <MovieListItemLink to={`${link}${id}`} state={state}>{title}</MovieListItemLink>\n                        </MovieListItem>\n                    :\n                        <MovieListItem key={id}>\n                            <MovieListItemLink to={`${id}`} state={state}>{title}</MovieListItemLink>\n                        </MovieListItem> \n                )\n                })}\n\n        </MovieList>)\n}","import styled from \"styled-components\";\n\nexport const HomeTitle = styled.h1`\n    margin-left: 10px;\n    color: darkblue;\n`;","import { useState, useEffect } from \"react\";\nimport { getTrendingMovies } from \"services/api\";\nimport { TrendingMovieList } from \"components/TrendingMovieList/TrendingMovieList\";\nimport { HomeTitle } from './Home.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  \n  useEffect(() => {\n      getTrendingMovies().then(setTrendingMovies);\n  }, []);\n  \n  return <section>\n      <HomeTitle>Trending today</HomeTitle>\n      <TrendingMovieList movies={trendingMovies} link={`movies/`}/>\n  </section>\n}\n\nexport default Home;\n  ","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"54fe9974191bebd3941b5ae3cdd62e2b\";\n\n\n/// Получить популярные фильмы\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    const trendingMovies = response.data.results.map(movie => {\n        const {id, title} = movie;\n        return {\n            id,\n            title\n        }\n    })\n    return trendingMovies;\n};\n\n/// Получать фильмы при поиске\nexport const getMovieOnSearch = (searchQuery) => {\n    return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`)\n        .then(response => response.json())\n        .then(data => {\n            const movieList = data.results.map(movie => {\n                const { id, title } = movie;\n                return {\n                    id,\n                    title\n                }\n            })\n    \n            if (movieList.length === 0) {\n                alert(\"We can't found anythings, please repeate your request\")\n                return [];\n            }\n\n            return movieList;\n        });\n}\n\n\n//Получать информацию о фильме\nexport const getMovieDetails = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n    const {vote_average, title, overview, genres, poster_path, release_date} = response.data;\n\n    return {\n        vote_average,\n        title,\n        overview,\n        genres, \n        poster_path,\n        release_date}\n};\n\n\n/// Получать состав актеров\nexport const getMovieCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n\n    const castInfo = response.data.cast.map(a => {\n        const {name, character, profile_path, id} = a;\n        return {\n            name,\n            character,\n            profile_path,\n            id}\n    });\n\n    return castInfo;\n};\n\n\n//получать обзоры фильмов\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    const reviews = response.data.results.map(a => {\n        const {id, author, content } = a;\n        return {\n            id,\n            author,\n            content}\n    });  \n    \n    return reviews;\n}"],"names":["MovieList","styled","MovieListItem","MovieListItemLink","Link","TrendingMovieList","movies","link","state","map","movie","id","title","to","HomeTitle","useState","trendingMovies","setTrendingMovies","useEffect","getTrendingMovies","then","axios","API_KEY","response","data","results","getMovieOnSearch","searchQuery","fetch","json","movieList","length","alert","getMovieDetails","vote_average","overview","genres","poster_path","release_date","getMovieCast","castInfo","cast","a","name","character","profile_path","getMovieReviews","reviews","author","content"],"sourceRoot":""}