{"version":3,"file":"static/js/840.afadb93b.chunk.js","mappings":"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","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const MovieWrap = styled.section`\n    display: flex;\n    padding: 20px;\n    border-bottom: 1px grey solid;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-left: 30px;\n`;\n\nexport const ButtonBack = styled(Link)`\n  text-decoration: none;\n  display: block;\n  margin-bottom: 10px;\n  color: darkblue;\n    &:hover {\n      color: blue;\n    }\n`;\n\nexport const MovieTitle = styled.h2`\n  margin: 26px 0;\n`;\n\nexport const AdditionalWrap = styled.section`\n`;\n\nexport const AdditionalText = styled.h3`\n  margin-left: 20px;\n`;\n\nexport const AdditionalList = styled.ul`\n  list-style: none;\n  display: flex;\n  padding-left: 20px;\n`;\n\nexport const ListItem = styled.li`\nmargin-left: 20px;\n`;\n\nexport const ListItemLink = styled(Link)`\n    border-radius: 10px;\n    text-decoration: none;\n    font-size: 18px;\n    color: darkblue;\n    :hover,\n    :focus {\n        color: blue;\n    }\n`;","import { useEffect, useState} from \"react\";\nimport { Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { getMovieDetails } from \"services/api\";\nimport {MovieWrap, InfoContainer, ButtonBack, MovieTitle, AdditionalWrap, AdditionalText,\nAdditionalList, ListItem, ListItemLink } from './MovieDetails.styled';\n\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movieInfo, setMovieInfo] = useState({});\n    const location = useLocation();\n    const backLink = location?.state?.from ?? '/';\n\n    useEffect(() => {\n    getMovieDetails(movieId).then(setMovieInfo);  \n    }, [movieId]);\n\n    if (Object.keys(movieInfo).length === 0) {\n        return null;\n    }\n\n    const {vote_average, title, overview, genres, poster_path, release_date} = movieInfo;\n    const posterLink = BASE_POSTER_URL + poster_path;\n    const userScore = parseInt(vote_average * 10);\n    const genresInfo = genres.map(a => a.name).join(\" \");\n    const releaseYear = release_date.split('-')[0];\n\n    return (<>\n        <MovieWrap>\n            <div>\n                <ButtonBack to={backLink}>Go Back</ButtonBack>\n                <img src={posterLink} alt={title} />\n            </div>\n            <InfoContainer>\n                <MovieTitle>{title} ({releaseYear})</MovieTitle>\n                <p>User Score: {userScore}%</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{genresInfo}</p>\n            </InfoContainer>\n        </MovieWrap>\n        <AdditionalWrap>\n        <AdditionalText>Additional information</AdditionalText>\n        <AdditionalList>\n            <ListItem>\n            <ListItemLink to='cast' state={location.state}>Cast</ListItemLink>\n            </ListItem>\n            <ListItem>\n            <ListItemLink to='reviews' state={location.state}>Reviews</ListItemLink>\n            </ListItem>\n        </AdditionalList>\n        </AdditionalWrap>\n        \n        <Outlet />\n    </>\n    )\n}\n\nexport default MovieDetails;","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"54fe9974191bebd3941b5ae3cdd62e2b\";\n\n\n/// Получить популярные фильмы\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    const trendingMovies = response.data.results.map(movie => {\n        const {id, title} = movie;\n        return {\n            id,\n            title\n        }\n    })\n    return trendingMovies;\n};\n\n/// Получать фильмы при поиске\nexport const getMovieOnSearch = (searchQuery) => {\n    return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`)\n        .then(response => response.json())\n        .then(data => {\n            const movieList = data.results.map(movie => {\n                const { id, title } = movie;\n                return {\n                    id,\n                    title\n                }\n            })\n    \n            if (movieList.length === 0) {\n                alert(\"We can't found anythings, please repeate your request\")\n                return [];\n            }\n\n            return movieList;\n        });\n}\n\n\n//Получать информацию о фильме\nexport const getMovieDetails = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n    const {vote_average, title, overview, genres, poster_path, release_date} = response.data;\n\n    return {\n        vote_average,\n        title,\n        overview,\n        genres, \n        poster_path,\n        release_date}\n};\n\n\n/// Получать состав актеров\nexport const getMovieCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n\n    const castInfo = response.data.cast.map(a => {\n        const {name, character, profile_path, id} = a;\n        return {\n            name,\n            character,\n            profile_path,\n            id}\n    });\n\n    return castInfo;\n};\n\n\n//получать обзоры фильмов\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    const reviews = response.data.results.map(a => {\n        const {id, author, content } = a;\n        return {\n            id,\n            author,\n            content}\n    });  \n    \n    return reviews;\n}"],"names":["MovieWrap","styled","InfoContainer","ButtonBack","Link","MovieTitle","AdditionalWrap","AdditionalText","AdditionalList","ListItem","ListItemLink","movieId","useParams","useState","movieInfo","setMovieInfo","location","useLocation","backLink","state","from","useEffect","getMovieDetails","then","Object","keys","length","vote_average","title","overview","genres","poster_path","release_date","posterLink","userScore","parseInt","genresInfo","map","a","name","join","releaseYear","split","to","src","alt","axios","API_KEY","getTrendingMovies","response","trendingMovies","data","results","movie","id","getMovieOnSearch","searchQuery","fetch","json","movieList","alert","getMovieCast","castInfo","cast","character","profile_path","getMovieReviews","reviews","author","content"],"sourceRoot":""}