{"version":3,"file":"static/js/739.8800218c.chunk.js","mappings":"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","sources":["components/MoviesSearchForm/MoviesSearchForm.styled.js","components/MoviesSearchForm/MoviesSearchForm.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Movies.jsx","services/api.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  margin-top: 20px;\n  margin-left: 10px;\n  border-radius: 5px;\n  \n`;\n\nexport const FormInput = styled.input`\n  width: 200px;\n  margin-right: 10px;\n`;\n\nexport const FormBtn = styled.button`\n  \n`;","import { Form, FormInput, FormBtn } from \"./MoviesSearchForm.styled\";\nimport PropTypes from \"prop-types\";\n\nexport const MoviesSearchForm = ({ onSubmit }) => {\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        \n        const searchQuery = evt.target.elements.search.value.trim();\n\n        if(searchQuery.length === 0) {\n            return alert(\"Please, enter your request\")\n        }\n        \n        onSubmit(searchQuery);\n\n        evt.currentTarget.reset();\n    }\n   \n    return <Form onSubmit={handleSubmit}>\n        <FormInput type=\"text\" name=\"search\"/>\n        <FormBtn type=\"submit\">Search</FormBtn>\n    </Form>\n}\n\nMoviesSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin-left: 10px;\n`;\n\nexport const ListItem = styled.li``;\n\nexport const ListItemLink = styled(Link)`\n  text-decoration: none;\n  display: block;\n  width: 300px;\n  margin-top: 5px;\n  background-color: #cceeff;\n\n  padding: 5px;\n  color: black;\n  :hover,\n  :focus {\n    background-color: #1ab2ff;\n    color: white;\n    text-shadow: 1px blue;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { List, ListItem, ListItemLink } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies, link, state }) => {\n    return (\n        <List>\n            {movies.map(movie => {\n                const {id, title} = movie;\n                return (\n                    link ? \n                        <ListItem key={id}>\n                            <ListItemLink to={`${link}${id}`} state={state}>{title}</ListItemLink>\n                        </ListItem>\n                    :\n                        <ListItem key={id}>\n                            <ListItemLink to={`${id}`} state={state}>{title}</ListItemLink>\n                        </ListItem> \n                )\n                })}\n\n        </List>)\n}\n\nMoviesList.propTypes = {\n    state: PropTypes.object.isRequired,\n    movies: PropTypes.array.isRequired,\n    link: PropTypes.string,\n   \n}","import { MoviesSearchForm } from \"../components/MoviesSearchForm/MoviesSearchForm\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { getMovieOnSearch } from \"services/api\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const location = useLocation();\n    const searchQuery = searchParams.get('search');\n\n    useEffect(() => {\n        const fetchMoviesBySearch = async () => {\n            const data = await getMovieOnSearch(searchQuery).then(response => response).catch(error => console.log(error));\n            setMovies(data)\n        };\n    if(searchQuery) {\n        fetchMoviesBySearch();\n    }}, [searchQuery]);\n\n    const onSubmit = (search) => {\n        setSearchParams(search !== \"\" ? {search} : {})\n    };\n   \n    return <section>\n        <MoviesSearchForm onSubmit={onSubmit}/>\n        {movies && <MoviesList movies={movies} state={{from: location}}/>}\n    </section>\n}\n\nexport default Movies;","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"54fe9974191bebd3941b5ae3cdd62e2b\";\n\n\n/// Получить популярные фильмы\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    const trendingMovies = response.data.results.map(movie => {\n        const {id, title} = movie;\n        return {\n            id,\n            title\n        }\n    })\n    return trendingMovies;\n};\n\n/// Получать фильмы при поиске\nexport const getMovieOnSearch = (searchQuery) => {\n    return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`)\n        .then(response => response.json())\n        .then(data => {\n            const movieList = data.results.map(movie => {\n                const { id, title } = movie;\n                return {\n                    id,\n                    title\n                }\n            })\n    \n            if (movieList.length === 0) {\n                alert(\"We can't found anythings, please repeate your request\")\n                return [];\n            }\n\n            return movieList;\n        });\n}\n\n\n//Получать информацию о фильме\nexport const getMovieDetails = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n    const {vote_average, title, overview, genres, poster_path, release_date} = response.data;\n\n    return {\n        vote_average,\n        title,\n        overview,\n        genres, \n        poster_path,\n        release_date}\n};\n\n\n/// Получать состав актеров\nexport const getMovieCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n\n    const castInfo = response.data.cast.map(a => {\n        const {name, character, profile_path, id} = a;\n        return {\n            name,\n            character,\n            profile_path,\n            id}\n    });\n\n    return castInfo;\n};\n\n\n//получать обзоры фильмов\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    const reviews = response.data.results.map(a => {\n        const {id, author, content } = a;\n        return {\n            id,\n            author,\n            content}\n    });  \n    \n    return reviews;\n}"],"names":["Form","styled","FormInput","FormBtn","MoviesSearchForm","onSubmit","evt","preventDefault","searchQuery","target","elements","search","value","trim","length","alert","currentTarget","reset","type","name","List","ListItem","ListItemLink","Link","MoviesList","movies","link","state","map","movie","id","title","to","useState","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","get","useEffect","fetchMoviesBySearch","getMovieOnSearch","then","response","catch","error","console","log","data","from","axios","API_KEY","getTrendingMovies","trendingMovies","results","fetch","json","movieList","getMovieDetails","vote_average","overview","genres","poster_path","release_date","getMovieCast","castInfo","cast","a","character","profile_path","getMovieReviews","reviews","author","content"],"sourceRoot":""}